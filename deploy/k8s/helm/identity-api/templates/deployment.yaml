{{- $name := include "identity-api.fullname" . -}}
{{- $cfgname := printf "%s-%s" "cfg" $name -}}
{{- $secretVolume := "secrets-volumne" -}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "identity-api.fullname" . }}
  labels:
    {{- include "identity-api.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "identity-api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "identity-api.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "identity-api.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: {{ $secretVolume }}
          secret:
            secretName: identity-signing-credential
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: {{ $secretVolume }}
              mountPath: /app/secrets
              readOnly: true
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          env:
            - name: ConnectionStrings__PostgresPassword
              valueFrom:
                secretKeyRef:
                  name: pgpassword
                  key: PGPASSWORD
          {{- if .Values.env.configmap }}
          {{- range .Values.env.configmap }}
            - name: {{ .name }}
              valueFrom:
                configMapKeyRef:
                  name: {{ $cfgname }}
                  key: {{ .key }}
          {{- end }}
          {{- end }}
          {{- if .Values.env.value }}
          {{- range .Values.env.value }}
            - name: {{ .name }}
              value: {{ .value }}
          {{- end }}
          {{- end }}
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
